<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>OMINI.BASS</title>
  
  
  <link href="https://ominibass.github.io/atom.xml" rel="self"/>
  
  <link href="https://ominibass.github.io/"/>
  <updated>2021-12-07T06:45:27.616Z</updated>
  <id>https://ominibass.github.io/</id>
  
  <author>
    <name>OMINI.BASS</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>通过GitHub+Axure创建个人网站</title>
    <link href="https://ominibass.github.io/2021/12/07/%E9%80%9A%E8%BF%87GitHub+Axure%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
    <id>https://ominibass.github.io/2021/12/07/%E9%80%9A%E8%BF%87GitHub+Axure%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/</id>
    <published>2021-12-07T07:13:25.713Z</published>
    <updated>2021-12-07T06:45:27.616Z</updated>
    
    <content type="html"><![CDATA[<h1 id="通过GitHub-Axure创建个人网站"><a href="#通过GitHub-Axure创建个人网站" class="headerlink" title="通过GitHub+Axure创建个人网站"></a>通过GitHub+Axure创建个人网站</h1><blockquote><p>本文将介绍一种不需要开发，且无成本的个人网站部署方式，希望大家能通过本文创建自己的个人网站。</p></blockquote><p>众所周知，如果想要创建一个属于自己的个人网站，能够外网访问并拥有自己的域名，那么至少需要有以下几方面的知识储备：</p><ul><li>一定的编程能力，能够根据自己的想法编写自己的网站</li><li>熟悉网站部署，能够在服务器上部署自己的网站</li><li>具备一些服务器维护的知识，能够将内网IP映射到外网</li></ul><p>当然除了技术之外，每年还需要租用服务器和域名，最基本的大概就是小千把块钱一年了。</p><p>那么作为一个穷逼非技术产品经理，是否有一个方便且省钱的方法能够创建我们的个人网站，展示自己的能力和作品呢？本文将介绍通过axure+GitHub的形式，来达成我们目的的一种方法。</p><p>先看下最终效果：<a href="https://ominibass.github.io/">https://ominibass.github.io/</a></p><h2 id="通过Axure创建个人网站"><a href="#通过Axure创建个人网站" class="headerlink" title="通过Axure创建个人网站"></a>通过Axure创建个人网站</h2><p>在教程开始前，先来了解下通过Axure创建个人网站时候需要注意的几个点：</p><ol><li>注意自适应：尽量通过动态面板的100%宽度及固定位置的功能实现多分辨率下页面的显示效果统一；</li><li>少用图片：由于GitHub服务器在国外，所以图片加载速度会比较感人；</li><li>适当使用中继器，能够保证页面中元素的整齐划一，保证页面的美观性；</li><li>Axure由于不支持数据库，因此网站更新需要重新在Axure中编辑后生成html文件进行更新。</li></ol><p>这部分的内容不过多的赘述，具体可以参考@时光若刻的文章：<a href="http://www.woshipm.com/rp/941478.html">不会编程？Axure一样可以做网站 By @时光若刻</a></p><p>或者下载这里已经为大家准备好的原型模板，希望能够帮助大家快速的创建自己的个人网站：<a href="http://www.pmdaniu.com/rp/detail/102118">点击下载</a></p><h2 id="2-生成个人网站所需的html"><a href="#2-生成个人网站所需的html" class="headerlink" title="2. 生成个人网站所需的html"></a>2. 生成个人网站所需的html</h2><blockquote><p>由于axure正常生成的html是带有侧边栏的，作为个人网站来说并不合适，以下将介绍如何生成没有侧边栏的html；</p></blockquote><p>以上方的模板原型为例：</p><p>（1）将页面中的第一个页面名称设置为index，其余的页面不需要进行修改；<img src="http://image.woshipm.com/wp-files/2019/09/QORppFDY6ozAfX9mBFq3.png" alt="img">（2）通过F8或菜单栏“发布-生成html”文件，生成个人网站html文件夹，配置不需要做修改，记住生成文件夹的位置；<img src="http://image.woshipm.com/wp-files/2019/09/MhmopEOBzkmDWrZ8f7Jf.png" alt="img">（3）打开原型生成的的HTML文件夹，然后删除所有start开头的文件；<img src="http://image.woshipm.com/wp-files/2019/09/bAUQ7EK5oTjTkemOR58V.png" alt="img"></p><p>至此，需要通过Axure完成的操作已经完成，接下来将介绍GitHub相关的操作。</p><h2 id="3-注册GitHub账号并下载客户端"><a href="#3-注册GitHub账号并下载客户端" class="headerlink" title="3. 注册GitHub账号并下载客户端"></a>3. 注册GitHub账号并下载客户端</h2><blockquote><p>GitHub其实支持通过命令行的形式进行操作，但考虑到大部分同学没有git指令基础，所以此处采用GitHub客户端进行操作，更加的方便快捷，如果有git指令基础的同学也可以尝试直接用命令行来进行操作。</p></blockquote><p>（1）进入Github网站：<a href="https://github.com/%EF%BC%8C%E6%B3%A8%E5%86%8C%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84%E8%B4%A6%E5%8F%B7%EF%BC%8C%E8%AE%B0%E4%BD%8F%E8%87%AA%E5%B7%B1%E7%9A%84Username%EF%BC%8C%E5%9C%A8%E5%90%8E%E9%9D%A2%E4%BC%9A%E7%94%A8%E5%88%B0%EF%BC%9B![img](http://image.woshipm.com/wp-files/2019/09/9amnkL4UrW7UTnHKJ8y8.png)%EF%BC%882%EF%BC%89%E4%B8%8B%E8%BD%BDGithub%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%B9%B6%E5%AE%89%E8%A3%85%EF%BC%8C%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%EF%BC%9Ahttps://desktop.github.com/![img](http://image.woshipm.com/wp-files/2019/09/YSN1FJKd4Rim4sTZ5Ro7.png)">https://github.com/，注册一个自己的账号，记住自己的Username，在后面会用到；![img](http://image.woshipm.com/wp-files/2019/09/9amnkL4UrW7UTnHKJ8y8.png)（2）下载Github客户端并安装，下载地址：https://desktop.github.com/![img](http://image.woshipm.com/wp-files/2019/09/YSN1FJKd4Rim4sTZ5Ro7.png)</a></p><h2 id="4-创建仓库并上传html"><a href="#4-创建仓库并上传html" class="headerlink" title="4. 创建仓库并上传html"></a>4. 创建仓库并上传html</h2><blockquote><p>本段将介绍通过GitHub客户端创建仓库并上传html，配置完成后即可获得自己的个人网站。</p></blockquote><p>（1）GitHub客户端安装完成后，进入程序，输入自己的账号登录；</p><p>（2）点击程序菜单栏File，在下拉框中选择：New repository；<img src="http://image.woshipm.com/wp-files/2019/09/a5LZyR0PpR2GvTNYsnez.png" alt="img">（3）在弹出的窗口中完善仓库相关信息，需要填写的内容如下：</p><p>Name（仓库名）：填写Username.github.io</p><p>Local path（本地路径）：本地存放html的位置，修改后需要记住，后面需要用。</p><p>其他内容默认即可，不需要进行配置，所有内容填写完成后，点击“Create repository”创建一个仓库。</p><p><img src="http://image.woshipm.com/wp-files/2019/09/Vi1G9lr7H6yTmkzEF7c5.png" alt="img"></p><p>（4）创建成功后，在资源管理器中打开Local path的路径，如果没问题的话会看到一个以Name命名的文件夹</p><p><img src="http://image.woshipm.com/wp-files/2019/09/R3KJr0wdgMOw5XpDtybP.png" alt="img"></p><p>（5）进入文件夹，将第二步中生成的html全部拷贝过来。</p><p><img src="http://image.woshipm.com/wp-files/2019/09/4OmLI8eqDBetGh6LzbsO.png" alt="img"></p><p>（6）回到GitHub客户端，会发现左侧的变更历史中出现了许多的内容。完善左下角的修改总结和描述后，点击下方“Commin to master”提交代码。</p><p><img src="http://image.woshipm.com/wp-files/2019/09/dTXfyKmPq8QvOTyPKwjV.png" alt="img"></p><p>（7）提交完成后，点击页面中上部的“Publish repository”，在弹出的对话框中将“keep thiscode private”前的复选框取消选中，点击“Publish repository”提交。<img src="http://image.woshipm.com/wp-files/2019/09/eFrFCvrJ1WILAIotQU6D.png" alt="img"></p><p><img src="http://image.woshipm.com/wp-files/2019/09/lk3iBQYTazEn20puTA0e.png" alt="img"></p><p>（8）打开浏览器，输入Username.github.io，即可访问你的主页。</p><p>至此，你就拥有了属于自己的个人网站了，可以分享起来了~</p><h2 id="5-网站更新"><a href="#5-网站更新" class="headerlink" title="5. 网站更新"></a>5. 网站更新</h2><p>网站更新的操作步骤与部署基本一致，依然是通过Axure生成html，删除无关文件并更新仓库来完成。此处不过多赘述。</p><h2 id="6-鸣谢"><a href="#6-鸣谢" class="headerlink" title="6. 鸣谢"></a>6. 鸣谢</h2><p>感谢<a href="http://www.woshipm.com/u/55654">@时光若刻</a> 提供的关于网站设计的帮助。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;通过GitHub-Axure创建个人网站&quot;&gt;&lt;a href=&quot;#通过GitHub-Axure创建个人网站&quot; class=&quot;headerlink&quot; title=&quot;通过GitHub+Axure创建个人网站&quot;&gt;&lt;/a&gt;通过GitHub+Axure创建个人网站&lt;/h1&gt;&lt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>利用Axure+js创建可配置地图页面</title>
    <link href="https://ominibass.github.io/2021/12/07/%E5%88%A9%E7%94%A8Axure%E5%88%9B%E5%BB%BA%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%9C%B0%E5%9B%BE%E9%A1%B5%E9%9D%A2/"/>
    <id>https://ominibass.github.io/2021/12/07/%E5%88%A9%E7%94%A8Axure%E5%88%9B%E5%BB%BA%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%9C%B0%E5%9B%BE%E9%A1%B5%E9%9D%A2/</id>
    <published>2021-12-07T07:13:25.709Z</published>
    <updated>2021-12-07T07:15:15.379Z</updated>
    
    <content type="html"><![CDATA[<h1 id="利用Axure-js创建可配置地图页面"><a href="#利用Axure-js创建可配置地图页面" class="headerlink" title="利用Axure+js创建可配置地图页面"></a>利用Axure+js创建可配置地图页面</h1><blockquote><p>本文通过Axure+高德自定义地图功能，能够实现在axure中配置相关参数，并最终在预览时实现自定义地图展示的效果。</p></blockquote><p>先看下最终的效果：<a href="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/demo/demo_%E5%8F%AF%E8%A7%86%E5%8C%96%E5%BC%95%E7%94%A8js/start.html">点击访问</a></p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211029145129149.png" alt="最终效果"></p><h2 id="一、实现原理"><a href="#一、实现原理" class="headerlink" title="一、实现原理"></a>一、实现原理</h2><ol><li>高德提供了自定义地图配置功能，并提供了html代码，通过前端工具可以将html转为js格式；</li><li>Axure能够直接调用javascript，通过该功能结合高德转的js，可以实现预览时候展示我们创建的自定义地图；</li><li>高德提供的自定义地图有相当多的参数，通过Axure的局部变量，我们可以将在Axure中配置好的参数传输到js中，最终实现地图样式的自定义配置。</li></ol><p>以下为具体操作步骤</p><h2 id="二、高德地图配置"><a href="#二、高德地图配置" class="headerlink" title="二、高德地图配置"></a>二、高德地图配置</h2><h3 id="2-1-注册高德开发者账号"><a href="#2-1-注册高德开发者账号" class="headerlink" title="2.1 注册高德开发者账号"></a>2.1 注册高德开发者账号</h3><p>进入高德开发者平台（注册地址：<a href="https://lbs.amap.com/">点击注册</a>）注册完成后，点击控制台进入配置页面；</p><h3 id="2-2-新建应用并获取key"><a href="#2-2-新建应用并获取key" class="headerlink" title="2.2  新建应用并获取key"></a>2.2  新建应用并获取key</h3><p>进入工作台后依次点击<strong>应用管理-我的应用-创建新应用</strong></p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211028223137985.png" alt="创建应用"></p><p>在弹出的对话框中根据要求完善信息，点击<code>新建</code>按钮，即可创建成功</p><p>应用创建成功后，点击应用名称列中的<code>添加</code>按钮，在弹出的对话框中根据要求完善信息，注意：服务平台请选择Web端(JS API)，否则会导致生成的key无法使用。</p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211028223300139.png" alt="创建key"></p><p>key添加成功后，在列表中我们就能够看到生成的key，复制下来备用。</p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211029093157742.png" alt="获取key值"></p><h3 id="2-3-新建自定义地图"><a href="#2-3-新建自定义地图" class="headerlink" title="2.3 新建自定义地图"></a>2.3 新建自定义地图</h3><p>进入高德自定义地图配置页面 <a href="https://geohub.amap.com/mapstyle/index">点击访问</a>，在页面中可以选择模板进行创建或直接新建，操作后将进入到地图配置页面。</p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211029094246408.png" alt="创建地图样式"></p><p>在地图的配置页面中，我们能够针对地图中的各项内容进行配置，包括但不限于显示、颜色等等，此处根据自己的需求进行设置即可。在设置完成后，点击<code>发布</code>按钮，地图即可发布成功</p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211029093815447.png" alt="自定义地图配置"></p><p>地图发布成功后，回到自定义地图管理页，找到配置好的地图卡片，点击<code>分享</code>按钮，在新页面中即可获取到地图的调用地址，复制下来备用</p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211029093920825.png" alt="image-20211029093920825"></p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211029094036611.png" alt="获取调用地址"></p><h3 id="2-4-生成地图html"><a href="#2-4-生成地图html" class="headerlink" title="2.4 生成地图html"></a>2.4 生成地图html</h3><p>进入高德JS API示例页面，<a href="https://lbs.amap.com/demo/javascript-api/example/personalized-map/custom_style">点击访问</a>，在页面中可以看到高德提供的默认地图样式，页面具体如下分布</p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211029114352133.png" alt="高德JS API"></p><p>在编辑区中，高德提供了默认的示例代码，将其中的<code>key</code>和<code>地图样式</code>替换为第2步和第3步获取的值后，点击<code>运行</code>按钮，就可以预览到我们创建的自定义地图样式了。</p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211029114748043.png" alt="替换内容"></p><h3 id="2-5-增加可配置参数"><a href="#2-5-增加可配置参数" class="headerlink" title="2.5 增加可配置参数"></a>2.5 增加可配置参数</h3><blockquote><p>此步骤需要一定的前端经验，但是对于产品经理来说应该不是什么难事</p></blockquote><p>众所周知，高德提供了相当多的参数用来控制地图的展示，这些参数可以在此处获取 <a href="https://lbs.amap.com/api/javascript-api/reference/map">点击访问</a>，在Map类中都是可以控制地图显示的参数，我们可以根据自己的需求复制对应的参数，添加到第4步中的样式中，格式参考高德提供的示例代码即可。</p><p>如下图，我们在添加了显示模式，是否允许缩放，缩放级别，等内容后，再次点击运行，就可以获取到一个看起来很炫酷的地图模型了。代码放在下面，可根据实际需求进行替换，在替换完成并预览成功后，我们即获得了一个html文件，可以复制下来备用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var map = new AMap.Map(&#x27;container&#x27;, &#123;</span><br><span class="line">resizeEnable: true,</span><br><span class="line"> viewMode: &#x27;3D&#x27;,</span><br><span class="line"> pitch:60,</span><br><span class="line"> showBuildingBlock:true,</span><br><span class="line"> rotation:35,</span><br><span class="line"> zoomEnable:false,</span><br><span class="line"> zoom:18,</span><br><span class="line"> center: [117.19199,34.263464],</span><br></pre></td></tr></table></figure><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211029133510852.png" alt="配置参数"></p><h2 id="三、html转js"><a href="#三、html转js" class="headerlink" title="三、html转js"></a>三、html转js</h2><p>熟悉Axure的同学都知道Axure可以引用js，而html可以转为js格式，通过如下转换工具即可实现互转 <a href="http://tool.chinaz.com/tools/html_js.aspx">点击访问</a>，在左侧填写我们上一步骤获取的html代码，右侧即可生成我们需要的js了，将代码复制下来备用。</p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211029115918307.png" alt="html转js"></p><h2 id="四、Axure引用js进行展示"><a href="#四、Axure引用js进行展示" class="headerlink" title="四、Axure引用js进行展示"></a>四、Axure引用js进行展示</h2><p>打开Axure，新建一个页面，在页面中添加一个内联框架并设置其尺寸为所需要的尺寸，此案例中由于需要将地图作为背景设计可视化页面，所以在页面加载中添加配置将内联框架尺寸设置为与窗口大小一致。</p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211029120248981.png" alt="添加内联框架"></p><p>双击内联框架，配置其链接属性，选择<code>连接到url或文件</code>，点击<code>fx</code>函数配置按钮，在弹出的页面中即可输入在第三步中获取的js代码了，配置完成后点击<code>确定</code>按钮，即配置完成。</p><p><strong>注意：在代码第一行需要添加声明：</strong><code>javascript:</code></p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211029120549888.png" alt="配置内联框架"></p><p>配置完成后，按F5进行预览，就能够看到我们配置的效果。</p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211029133115885.png" alt="预览效果"></p><p>到此步，我们就能够实现基本的地图展示了，但是如果需要修改样式的话，还是需要进行代码层面的调整，然后再重新进行操作，流程复杂。那么借用Axure中的局部变量，Auxre也能够实现参数的传递，从而实现Axure中配置好变量，预览时候就能变化了，以下讲具体操作步骤。</p><h2 id="五、通过表格实现参数传递"><a href="#五、通过表格实现参数传递" class="headerlink" title="五、通过表格实现参数传递"></a>五、通过表格实现参数传递</h2><h3 id="1-添加参数维护表格"><a href="#1-添加参数维护表格" class="headerlink" title="1. 添加参数维护表格"></a>1. 添加参数维护表格</h3><p>在页面中添加一个3列的表格，分别命名为<code>item</code>、<code>value</code>、<code>描述</code>，其中<code>item</code>代表的是参数名称，<code>value</code>代表参数值，<code>描述</code>对应参数描述，方便时间长了忘记参数的意思了，配置完成后讲2.5章节中的参数即参数值配置到表格中，得到下表。</p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211029133000614.png" alt="参数表格"></p><h3 id="2-参数绑定"><a href="#2-参数绑定" class="headerlink" title="2. 参数绑定"></a>2. 参数绑定</h3><p>对表格中的<code>value</code>列单元格设置单元格名称，建议与<code>item</code>保持一致，方便下一步的操作</p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211029133025897.png" alt="单元格配置"></p><p>单元格名称配置完成后，进入到内联框架链接编辑页面，先添加一系列局部变量，变量名称与变量名一致，变量值取对应的单元格中的元件文字，如下图对所有可配置的参数添加局部变量。</p><p>局部变量添加完成后，将上方编辑框中写死的值替换为对应的局部变量，保存。</p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211029125551014.png" alt="参数绑定"></p><p>完成此步后，添加的参数表格内容就与js中的参数进行了绑定，我们可以尝试根据要求对参数值进行修改，如将<code>3D</code>修改为<code>2D</code>，此时再次预览，就可以看到页面根据参数产生了变化。</p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211029132839026.png" alt="参数修改"></p><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211029132741895.png" alt="修改后效果"></p><p>最后将参数表格设置为载入后隐藏，预览时候就只展示地图页面了，到此设置完成。</p><h2 id="六、结语"><a href="#六、结语" class="headerlink" title="六、结语"></a>六、结语</h2><p>通过该案例，我们能够大概了解一些前端的开发知识。曾经有一个问题是产品经理需不需要懂开发，个人认为产品经理不一定要写代码，但是要懂得研发的逻辑，而Axure就是一个我们去了解研发逻辑的工具，当那一天研发跟你说这个需求我拒绝的时候，你就可以把原型扔出来，告诉他：</p><blockquote><p>我原型都能画出来，你说代码实现不了？</p></blockquote><p>最后，附上本案例的原型链接：<a href="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/demo_%E5%8F%AF%E8%A7%86%E5%8C%96%E5%BC%95%E7%94%A8js.rp">点击下载</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;利用Axure-js创建可配置地图页面&quot;&gt;&lt;a href=&quot;#利用Axure-js创建可配置地图页面&quot; class=&quot;headerlink&quot; title=&quot;利用Axure+js创建可配置地图页面&quot;&gt;&lt;/a&gt;利用Axure+js创建可配置地图页面&lt;/h1&gt;&lt;bloc</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>03-CSS（第一天）</title>
    <link href="https://ominibass.github.io/2021/12/07/03-CSS%EF%BC%88%E7%AC%AC%E4%B8%80%E5%A4%A9%EF%BC%89/"/>
    <id>https://ominibass.github.io/2021/12/07/03-CSS%EF%BC%88%E7%AC%AC%E4%B8%80%E5%A4%A9%EF%BC%89/</id>
    <published>2021-12-07T07:13:25.700Z</published>
    <updated>2021-12-07T06:44:22.806Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSS简介"><a href="#CSS简介" class="headerlink" title="CSS简介"></a>CSS简介</h1><h2 id="一、CSS简介"><a href="#一、CSS简介" class="headerlink" title="一、CSS简介"></a>一、CSS简介</h2><h3 id="1-1-CSS简介"><a href="#1-1-CSS简介" class="headerlink" title="1.1 CSS简介"></a>1.1 CSS简介</h3><ul><li><p><strong>CSS</strong> 是层叠样式表 (Cascading Style Sheets)的简称.</p></li><li><p>有时我们也会称之为<strong>CSS样式表</strong>或级联样式表。</p></li><li><p>CSS 是也是一种标记语言</p></li><li><p>CSS 主要用于设置HTML页面中的<strong>文本内容</strong>（字体、大小、对齐方式等）、<strong>图片的外形</strong>（宽高、边框样式、边距等）以及版面的布局和外观显示样式。</p></li><li><p>CSS 让我们的网页更加丰富多彩，布局更加灵活自如。简单理解：<strong>CSS可以美化HTML，让HTML更漂亮，让页面布局更简单。</strong></p></li><li><p>总结</p><ol><li>HTML主要做结构，显示元素内容。</li><li>CSS美化HTML，布局网页.</li><li>CSS 最大价值: <strong>由 HTML 专注去做结构呈现，样式交给 CSS，即 结构 ( HTML ) 与样式( CSS ) 相分离。</strong></li></ol></li></ul><h3 id="1-2-CSS语法规范"><a href="#1-2-CSS语法规范" class="headerlink" title="1.2 CSS语法规范"></a>1.2 CSS语法规范</h3><ul><li>CSS规则由两个主要部分组成，<strong>选择器</strong>以及<strong>一条或多条声明</strong></li></ul><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211206091743646.png" alt="image-20211206091743646"></p><ul><li><strong>选择器</strong>是用于指定 CSS 样式的 <strong>HTML 标签</strong>，花括号内是对该对象设置的具体样式</li><li>属性和属性值以“键值对”的形式出现</li><li>属性是对指定的对象设置的样式属性，例如字体大小、文本颜色等</li><li>属性和属性值之间用英文“:”分开</li><li>多个“键值对”之间用英文“;”进行区分</li><li>所有的样式，都包含在<code>&lt;style&gt;</code>标签内，表示是样式表。<code>&lt;style&gt;</code>一般写到<code>&lt;/head&gt;</code>上方</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-tag">h4</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、-CSS基础选择器"><a href="#二、-CSS基础选择器" class="headerlink" title="二、 CSS基础选择器"></a>二、 CSS基础选择器</h2><ul><li>选择器（选择符）就是根据不同需求把不同的标签选出来。简单来说，就是选择标签用的</li></ul><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211206091743646.png" alt="image-20211206091743646"></p><h3 id="2-1-标签选择器"><a href="#2-1-标签选择器" class="headerlink" title="2.1 标签选择器"></a>2.1 标签选择器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">标签名 &#123;</span><br><span class="line">    属性1：属性值1；</span><br><span class="line">    属性2：属性值2；</span><br><span class="line">    属性3：属性值3；</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>作用：标签选择器可以把某一类标签全部选择出来，比如所有的 <code>&lt;div&gt;</code> 标签和所有的 <code>&lt;span&gt;</code> 标签。</li><li>优点：能快速为页面中同类型的标签统一设置样式。</li><li>缺点：不能设计差异化样式，只能选择全部的当前标签。</li></ul><h3 id="2-2-类选择器"><a href="#2-2-类选择器" class="headerlink" title="2.2 类选择器"></a>2.2 类选择器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.类名 &#123;</span><br><span class="line">    属性1：属性值1</span><br><span class="line">    属性2：属性值2</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如果想要差异化选择不同的标签，单独选一个或者某几个标签，可以使用<strong>类选择器</strong>。</li><li>类选择器在 HTML 中以 <strong>class</strong> 属性表示，在 CSS 中，类选择器以一个点“.”号显示。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">‘red’</span>&gt;</span> 变红色 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>注意</p><ol><li>类选择器使用“.”（英文点号）进行标识，后面紧跟类名（自定义，我们自己命名的）。</li><li>可以理解为给这个标签起了一个名字，来表示。</li><li>③长名称或词组可以使用中横线来为选择器命名。</li><li>不要使用纯数字、中文等命名，尽量使用英文字母来表示。</li><li>命名要有意义，尽量使别人一眼就知道这个类名的目的。</li><li>命名规范：见附件（ Web 前端开发规范手册.doc）</li></ol></li><li><p>多类名使用方式</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red font20&quot;</span>&gt;</span>亚瑟<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>使用方法<ol><li>在标签class 属性中写 多个类名</li><li>多个类名中间必须用空格分开</li><li>这个标签就可以分别具有这些类名的样式</li></ol></li></ul><h3 id="2-3-id选择器"><a href="#2-3-id选择器" class="headerlink" title="2.3 id选择器"></a>2.3 id选择器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#id名 &#123;</span><br><span class="line">    属性1: 属性值1;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>注意：id 属性只能在每个 HTML 文档中出现一次。口诀: 样式#定义,结构id调用, 只能调用一次, 别人切勿使用.</strong></li><li>id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式。</li><li>HTML 元素以 <strong>id</strong> 属性来设置 id 选择器，CSS 中 id 选择器以“**#**” 来定义。</li><li>id 选择器和类选择器的区别<ol><li>类选择器（class）好比人的名字，一个人可以有多个名字，同时一个名字也可以被多个人使用。</li><li>id 选择器好比人的身份证号码，全中国是唯一的，不得重复。</li><li>id 选择器和类选择器最大的不同在于使用次数上。</li><li>类选择器在修改样式中用的最多，id 选择器一般用于页面唯一性的元素上，经常和 JavaScript 搭配使用。</li></ol></li></ul><h3 id="2-4-通配符选择器"><a href="#2-4-通配符选择器" class="headerlink" title="2.4 通配符选择器"></a>2.4 通配符选择器</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">    属性1: 属性值1;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>通配符选择器不需要调用， 自动就给所有的元素使用样式</li></ul><h3 id="2-5-基础选择器总结"><a href="#2-5-基础选择器总结" class="headerlink" title="2.5 基础选择器总结"></a>2.5 基础选择器总结</h3><table><thead><tr><th>类型</th><th>作用</th><th>特点</th><th>使用情况</th><th>用法</th></tr></thead><tbody><tr><td>标签选择器</td><td>可以选出所有相同的标签，比如<code>&lt;p&gt;</code></td><td>不能差异化选择</td><td>较多</td><td><code>p &#123;color: red;&#125;</code></td></tr><tr><td>类选择器</td><td>可以选出1个或者多个标签</td><td>可以根据需求选择</td><td>非常多</td><td><code>.nav &#123;color: red;&#125;</code></td></tr><tr><td>id选择器</td><td>1次只能选择1个标签</td><td>ID属性只能在每个HTML中出现一次</td><td>一般和JS搭配</td><td><code>#nav &#123;color:red;&#125;</code></td></tr><tr><td>通配符选择器</td><td>选择所有的标签</td><td>选择的太多，有部分不需要</td><td>特殊情况下试用</td><td><code>* &#123;color:red;&#125;</code></td></tr></tbody></table><h2 id="三、CSS字体属性"><a href="#三、CSS字体属性" class="headerlink" title="三、CSS字体属性"></a>三、CSS字体属性</h2><ul><li>CSS Fonts (字体)属性用于定义字体系列、大小、粗细、和文字样式（如斜体）。</li></ul><h3 id="3-1-字体"><a href="#3-1-字体" class="headerlink" title="3.1 字体"></a>3.1 字体</h3><ul><li>CSS 使用 font-size 属性定义字体大小。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123; <span class="attribute">font-family</span>:<span class="string">&quot;微软雅黑&quot;</span>;&#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123;<span class="attribute">font-family</span>: Arial,<span class="string">&quot;Microsoft Yahei&quot;</span>, <span class="string">&quot;微软雅黑&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><ul><li>各种字体之间必须使用英文状态下的逗号隔开</li><li>一般情况下,如果有空格隔开的多个单词组成的字体,加引号.</li><li> 尽量使用系统默认自带字体，保证在任何用户的浏览器中都能正确显示</li><li>最常见的几个字体：body {font-family: ‘Microsoft YaHei’,tahoma,arial,’Hiragino Sans GB’; }</li></ul><h3 id="3-2-字体大小"><a href="#3-2-字体大小" class="headerlink" title="3.2 字体大小"></a>3.2 字体大小</h3><ul><li>CSS 使用 font-size 属性定义字体大小。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>px（像素）大小是我们网页的最常用的单位</li><li>谷歌浏览器默认的文字大小为16px</li><li>不同浏览器可能默认显示的字号大小不一致，我们尽量给一个明确值大小，不要默认大小</li><li>可以给 body 指定整个页面文字的大小</li></ul><h3 id="3-3-字体粗细"><a href="#3-3-字体粗细" class="headerlink" title="3.3 字体粗细"></a>3.3 字体粗细</h3><ul><li>CSS 使用 font-weight 属性设置文本字体的粗细。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>normal</td><td>默认值（不加粗的）</td></tr><tr><td>bold</td><td>定义粗体（加粗的）</td></tr><tr><td>100-900</td><td>400等同于normal，700等同于bold，<strong>注意不加单位</strong></td></tr></tbody></table><h3 id="3-4-文字样式"><a href="#3-4-文字样式" class="headerlink" title="3.4 文字样式"></a>3.4 文字样式</h3><ul><li>CSS试用font-style属性设置文本的风格</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: normal</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>normal</td><td>默认值</td></tr><tr><td>italic</td><td>斜体</td></tr></tbody></table><ul><li>注意：平时我们很少给文字加斜体，反而要给斜体标签（em，i）改为不倾斜字体。</li></ul><h3 id="3-5-字体复合属性"><a href="#3-5-字体复合属性" class="headerlink" title="3.5 字体复合属性"></a>3.5 字体复合属性</h3><ul><li>字体属性可以把以上文字样式综合来写，用以节约代码</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: font-style  font-weight  font-size/line-height  font-family;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>使用font属性时，必需按照上面的语法格式中的顺序书写，<strong>不能更换顺序</strong>，而且各个属性间以<strong>空格</strong>隔开</li><li>不需要设置的属性可以省略（取默认值），但<strong>必须保留font-size 和 font-family属性</strong>，否则font属性将不起作用</li></ul><h3 id="3-6-字体属性总结"><a href="#3-6-字体属性总结" class="headerlink" title="3.6 字体属性总结"></a>3.6 字体属性总结</h3><table><thead><tr><th>属性</th><th>表示</th><th>注意点</th></tr></thead><tbody><tr><td>font-family</td><td>字体</td><td>实际工作中按照团队约定来写字体，定义于<code>&lt;body&gt;</code></td></tr><tr><td>font-size</td><td>字号</td><td>通常使用px像素，注意跟上单位</td></tr><tr><td>font-weight</td><td>粗细</td><td>normal=400，bold=700，数字不跟单位</td></tr><tr><td>font-style</td><td>样式</td><td>italic表示倾斜，normal表示不倾斜</td></tr><tr><td>font</td><td>复合属性</td><td>1.字体连写必须按照顺序书写；2.<strong>字号</strong> 和 <strong>字体</strong>必需出现</td></tr></tbody></table><h2 id="四、-CSS文本属性"><a href="#四、-CSS文本属性" class="headerlink" title="四、 CSS文本属性"></a>四、 CSS文本属性</h2><h3 id="4-1-文本颜色"><a href="#4-1-文本颜色" class="headerlink" title="4.1 文本颜色"></a>4.1 文本颜色</h3><ul><li><strong>color</strong>属性用于定义文本的颜色</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>表示</th><th>属性值</th></tr></thead><tbody><tr><td>预定义的颜色值</td><td>red/green/blue…</td></tr><tr><td>十六进制**(最常用)**</td><td>#FF0000/#FF6600…</td></tr><tr><td>RGB代码</td><td>rgb(255,0,0)或rgb(100%,0%,0%)</td></tr></tbody></table><h3 id="4-2-对齐文本"><a href="#4-2-对齐文本" class="headerlink" title="4.2 对齐文本"></a>4.2 对齐文本</h3><ul><li><strong>text-aligh</strong>属性用于设置<strong>元素内</strong>内容的水平对齐方式</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>解释</th></tr></thead><tbody><tr><td>left</td><td>左对齐（默认值）</td></tr><tr><td>right</td><td>右对齐</td></tr><tr><td>center</td><td>居中对齐</td></tr></tbody></table><h3 id="4-3-装饰文本"><a href="#4-3-装饰文本" class="headerlink" title="4.3 装饰文本"></a>4.3 装饰文本</h3><ul><li><strong>text-decoration</strong>属性规定添加到文本的修饰，可以给文本添加下划线、删除线、上划线等。</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>none</td><td>默认，没有装饰线（最常用）</td></tr><tr><td>underline</td><td>下划线，链接<code>&lt;a&gt;</code>自带下划线（常用）</td></tr><tr><td>overline</td><td>上划线（几乎不用）</td></tr><tr><td>line-through</td><td>删除线（不常用）</td></tr></tbody></table><h3 id="4-4-文本缩进"><a href="#4-4-文本缩进" class="headerlink" title="4.4 文本缩进"></a>4.4 文本缩进</h3><ul><li><strong>text-indent</strong>属性用来指定文本的第一行的缩进，通常是将<strong>段落的首行缩进</strong></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">text-indent</span>: <span class="number">2em</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>em是一个相对单位，就是当前元素（font-size）<strong>1个文字的大小</strong>，如果当前元素没有设置大小，则会按照父元素的1个文字大小。</li></ul><h3 id="4-5-行间距"><a href="#4-5-行间距" class="headerlink" title="4.5 行间距"></a>4.5 行间距</h3><ul><li>line-height 属性用于设置行间的间距（行高）。可以控制文字行与行之间的距离</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">26px</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211206222354422.png" alt="image-20211206222354422"></p><h3 id="4-6-文本属性总结"><a href="#4-6-文本属性总结" class="headerlink" title="4.6 文本属性总结"></a>4.6 文本属性总结</h3><table><thead><tr><th>属性</th><th>表示</th><th>注意点</th></tr></thead><tbody><tr><td>color</td><td>文本颜色</td><td>通常使用 十六进制如#333</td></tr><tr><td>text-align</td><td>文本对齐</td><td>可以设定文字水平的对齐方式</td></tr><tr><td>text-indent</td><td>文本缩进</td><td>通常用于段落首行缩进2个字的距离。text-align: 2em</td></tr><tr><td>text-decoration</td><td>文本修饰</td><td>添加下划线：underline；取消下划线：none</td></tr><tr><td>line-height</td><td>行高</td><td>控制行与行之间的距离</td></tr></tbody></table><h2 id="五、-CSS的引入方式"><a href="#五、-CSS的引入方式" class="headerlink" title="五、 CSS的引入方式"></a>五、 CSS的引入方式</h2><h3 id="5-1-内部样式表"><a href="#5-1-内部样式表" class="headerlink" title="5.1 内部样式表"></a>5.1 内部样式表</h3><ul><li>内部样式表（内嵌样式表）是写到html内部。将所有的CSS代码抽取出来，单独放到一个<code>&lt;style&gt;</code>标签中</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    <span class="selector-tag">div</span> &#123;</span><br><span class="line">        <span class="attribute">color</span>: red;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ul><li><p><code>&lt;style&gt;</code> 标签理论上可以放在 HTML 文档的任何地方，但一般会放在文档的<code>&lt;head&gt;</code>标签中 </p></li><li><p>通过此种方式，可以方便控制当前整个页面中的元素样式设置</p></li><li><p>代码结构清晰，但是并没有实现结构与样式完全分离</p></li><li><p>使用内部样式表设定 CSS，通常也被称为嵌入式引入，这种方式是我们练习时常用的方式</p></li></ul><h3 id="5-2-行内样式表"><a href="#5-2-行内样式表" class="headerlink" title="5.2 行内样式表"></a>5.2 行内样式表</h3><ul><li>行内样式表（内联样式表）是在元素标签内部的style属性中设定CSS样式。适合于修改简单样式；</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: red; font-size: 24px;&quot;</span>&gt;</span>元素内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>style其实就是标签的属性</li><li>在双引号之间，写法要符合css规范</li><li>可以控制当前的标签设置样式</li><li>由于书写繁琐，并且没有体现出结构与样式相分离的思想，所以不推荐大量使用，只有对当前元素添加简单样式的时候，可以考虑使用</li><li>使用行内样式表设定 CSS，通常也被称为<strong>行内式引入</strong></li></ul><h3 id="5-3-外部样式表"><a href="#5-3-外部样式表" class="headerlink" title="5.3 外部样式表"></a>5.3 外部样式表</h3><ul><li>实际开发都是外部样式表. 适合于样式比较多的情况。核心是:样式单独写到CSS 文件，之后把CSS文件引入到 HTML 页面中使用。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css文件路径&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>rel</td><td>定义当前文档与被链接文档之间的关系，在这里需要指定为“stylesheet”，表示被链接的文档是一个样式表文件</td></tr><tr><td>href</td><td>定义所链接外部样式表文件的url，可以是相对路径，也可以是绝对路径</td></tr></tbody></table><ul><li>引入外部样式表分为两步：<ol><li>新建一个后缀名为 .css 的样式文件，把所有 CSS 代码都放入此文件中。</li><li>在 HTML 页面中，使用<code>&lt;link&gt;</code> 标签引入这个文件。</li></ol></li></ul><ul><li>使用外部样式表设定 CSS，通常也被称为<strong>外链式</strong>或<strong>链接式引入</strong>，这种方式是开发中常用的方式</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CSS简介&quot;&gt;&lt;a href=&quot;#CSS简介&quot; class=&quot;headerlink&quot; title=&quot;CSS简介&quot;&gt;&lt;/a&gt;CSS简介&lt;/h1&gt;&lt;h2 id=&quot;一、CSS简介&quot;&gt;&lt;a href=&quot;#一、CSS简介&quot; class=&quot;headerlink&quot; title=</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>02-HTML（下）</title>
    <link href="https://ominibass.github.io/2021/12/07/02-HTML%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
    <id>https://ominibass.github.io/2021/12/07/02-HTML%EF%BC%88%E4%B8%8B%EF%BC%89/</id>
    <published>2021-12-07T07:13:25.695Z</published>
    <updated>2021-12-07T07:43:35.360Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML简介"><a href="#HTML简介" class="headerlink" title="HTML简介"></a>HTML简介</h1><h2 id="一、表格标签"><a href="#一、表格标签" class="headerlink" title="一、表格标签"></a>一、表格标签</h2><h4 id="1-1-表格的基本用法"><a href="#1-1-表格的基本用法" class="headerlink" title="1.1 表格的基本用法"></a>1.1 表格的基本用法</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>标签语义</p><ul><li><code>&lt;table&gt;&lt;/table&gt;</code>是用于定义表格的标签</li><li><code>&lt;tr&gt;&lt;/tr&gt;</code>用于定义表格中的行，必需嵌套在<code>&lt;table&gt;&lt;/table&gt;</code>标签中</li><li><code>&lt;td&gt;&lt;/td&gt;</code>用于定义表格中的单元格，必需嵌套在<code>&lt;tr&gt;&lt;/tr&gt;</code>中</li><li>字母td指表格数据（table data），即数据单元格中的内容</li></ul></li></ul><h4 id="1-2表头单元格标签"><a href="#1-2表头单元格标签" class="headerlink" title="1.2表头单元格标签"></a>1.2表头单元格标签</h4><ul><li><code>&lt;th&gt;</code>标签表示HTML表格的表头部分（table head的缩写）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格内的文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-3-表格属性"><a href="#1-3-表格属性" class="headerlink" title="1.3 表格属性"></a>1.3 表格属性</h4><table><thead><tr><th>属性名</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>align</td><td>left、center、right</td><td>规定表格相对周围元素的对齐方式</td></tr><tr><td>border</td><td>1或””</td><td>规定表格单元是否拥有边框，默认为””，表示没有裱框</td></tr><tr><td>cellpadding</td><td>像素值</td><td>规定单元格边沿与其内容之间的空白，默认1像素</td></tr><tr><td>cellspacing</td><td>像素值</td><td>规定单元格之间的空白，默认2像素</td></tr><tr><td>width</td><td>像素值或%</td><td>规定表格的宽度</td></tr></tbody></table><h4 id="1-4-表格结构标签"><a href="#1-4-表格结构标签" class="headerlink" title="1.4 表格结构标签"></a>1.4 表格结构标签</h4><ul><li>在表格标签中，分别用<code>&lt;thead&gt;</code>表示表格的<strong>头部区域</strong>，<tbody>表示表格的<strong>主体区域</strong>，这样可以更好的分清表格结构</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>头部区域单元格文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>头部区域单元格文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>头部区域单元格文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>主体区域单元格文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>主体区域单元格文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>主体区域单元格文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>主体区域单元格文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>主体区域单元格文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>主体区域单元格文字<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1-5-合并单元格"><a href="#1-5-合并单元格" class="headerlink" title="1.5 合并单元格"></a>1.5 合并单元格</h4><ul><li>合并单元格方式<ul><li>跨行合并：<code>rowspan=&quot;合并单元格的个数&quot;</code></li><li>跨列合并：<code>colspan=&quot;合并单元格的格式&quot;</code></li></ul></li></ul><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211203220042353.png" alt="image-20211203220042353"></p><ul><li><p>合并单元格三部曲</p><ol><li><p>先确定是跨行还是跨列合并；</p></li><li><p>找到目标单元格，写上合并方式=合并的单元格数量。如：<code>&lt;td colspan= &quot;2&quot;&gt;&lt;/td&gt;</code></p></li><li><p>删除多余的单元格</p></li></ol></li></ul><h3 id="二、列表标签"><a href="#二、列表标签" class="headerlink" title="二、列表标签"></a>二、列表标签</h3><ul><li>列表分为三大类：<strong>无序列表</strong>、<strong>有序列表</strong>和<strong>自定义列表</strong></li></ul><h4 id="2-1-无序列表"><a href="#2-1-无序列表" class="headerlink" title="2.1 无序列表"></a>2.1 无序列表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>&lt;无序列表项/li&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>&lt;无序列表项/li&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>&lt;无序列表项/li&gt;</span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>无序列表的各个列表项之间没有顺序级别之分，是并列的</li><li><code>&lt;ul&gt;&lt;/ul&gt;</code>中智能嵌套<code>&lt;li&gt;&lt;/li&gt;</code>,直接在<code>&lt;ul&gt;&lt;/ul&gt;</code>标签中输入其他标签或文字的做法是不被允许的</li><li><code>&lt;li&gt;与&lt;/li&gt;</code>之间相当于一个容器，可以容纳<strong>所有</strong>元素</li><li>无序列表会带有自己的样式属性，但在实际使用时，我们会使用CSS来设置</li></ul><h4 id="2-2-无序列表"><a href="#2-2-无序列表" class="headerlink" title="2.2 无序列表"></a>2.2 无序列表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>&lt;无序列表项/li&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>&lt;无序列表项/li&gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>&lt;无序列表项/li&gt;</span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>&lt;ol&gt;&lt;/ol&gt;</code>中智能嵌套<code>&lt;li&gt;&lt;/li&gt;</code>,直接在<code>&lt;ol&gt;&lt;/ol&gt;</code>标签中输入其他标签或文字的做法是不被允许的</li><li><code>&lt;li&gt;与&lt;/li&gt;</code>之间相当于一个容器，可以容纳<strong>所有</strong>元素</li><li>有序列表会带有自己的样式属性，但在实际使用时，我们会使用CSS来设置</li></ul><h4 id="2-3-自定义列表"><a href="#2-3-自定义列表" class="headerlink" title="2.3 自定义列表"></a>2.3 自定义列表</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>名词1<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>名词1解释3<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>自定义列表的使用场景：自定义列表常用于对属于或名词进行解释和描述，定义列表的列表项前没有任何项目符号 </li></ul><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211203221630630.png" alt="image-20211203221630630"></p><ul><li><code>&lt;dl&gt;&lt;/dl&gt;</code>里面只能包含<code>&lt;dt&gt;</code>和<code>&lt;dd&gt;</code></li><li><code>&lt;dt&gt;</code>和<code>&lt;dd&gt;</code>个数没有限制，经常是一个<code>&lt;dt&gt;</code>对应多个<code>&lt;dd&gt;</code></li></ul><h3 id="三、表单标签"><a href="#三、表单标签" class="headerlink" title="三、表单标签"></a>三、表单标签</h3><h4 id="3-1-表单的用处"><a href="#3-1-表单的用处" class="headerlink" title="3.1 表单的用处"></a>3.1 表单的用处</h4><ul><li>使用表单的目的是为了<strong>收集用户信息</strong></li><li>在我们网页中，我们也需要跟用户进行交互，收集用户资料，此时就需要表单</li></ul><h4 id="3-2-表单的组成"><a href="#3-2-表单的组成" class="headerlink" title="3.2 表单的组成"></a>3.2 表单的组成</h4><ul><li>一个完整的表单通常由<strong>表单域</strong>、<strong>表单控件</strong>和<strong>提示信息</strong>3个部分组成</li></ul><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211203222439350.png" alt="image-20211203222439350"></p><h4 id="3-3-表单域"><a href="#3-3-表单域" class="headerlink" title="3.3 表单域"></a>3.3 表单域</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;url地址&quot;</span> <span class="attr">method</span>=<span class="string">&quot;提交方式&quot;</span> <span class="attr">name</span>=<span class="string">&quot;表单域名称&quot;</span>&gt;</span></span><br><span class="line">    各种表单元素控件</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>表单域是一个包含表单元素的区域</li><li><code>&lt;form&gt;</code>会把它范围内的表单元素信息提交给服务器</li></ul><table><thead><tr><th>属性</th><th>属性值</th><th>作用</th></tr></thead><tbody><tr><td>action</td><td>url地址</td><td>用于指定接收并处理表单数据的服务器程序的url地址</td></tr><tr><td>method</td><td>get/post</td><td>用于设置表单数据的提交方式，其取值为get或post</td></tr><tr><td>name</td><td>名称</td><td>用于指定表单的名称，以区分同一个页面中的多个表单域</td></tr></tbody></table><h4 id="3-4-表单控件"><a href="#3-4-表单控件" class="headerlink" title="3.4 表单控件"></a>3.4 表单控件</h4><h5 id="3-4-1-lt-input-gt-元素"><a href="#3-4-1-lt-input-gt-元素" class="headerlink" title="3.4.1 &lt;input&gt;元素"></a>3.4.1 &lt;input&gt;元素</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;属性值&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>&lt;inptu/&gt;</code>标签为单标签</li><li>type属性设置不同的属性值用来指定不同的控件类型，具体如下：</li></ul><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>button</td><td>定义可点击按钮</td></tr><tr><td>checkbox</td><td>定义复选框</td></tr><tr><td>file</td><td>定义输入字段和“浏览”按钮，供文件上传</td></tr><tr><td>hidden</td><td>定义隐藏的输入字段</td></tr><tr><td>image</td><td>定义图像形式的提交按钮</td></tr><tr><td>password</td><td>定义密码字段，该字段中的字符被掩码</td></tr><tr><td>radio</td><td>定义单选按钮</td></tr><tr><td>reset</td><td>定义重置按钮，重置按钮会清除表单中的所有数据</td></tr><tr><td>submit</td><td>定义提交按钮，提交按钮会把表单数据发送到服务器</td></tr><tr><td>text</td><td>定义单行的输入字段，默认宽度为20个字符</td></tr></tbody></table><ul><li><code>&lt;input/&gt;</code>还有其他属性，常用属性如下：</li></ul><table><thead><tr><th>属性</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>由用户自定义</td><td>定义input元素的名称</td></tr><tr><td>value</td><td>由用户自定义</td><td>规定input元素的值</td></tr><tr><td>checked</td><td>checked</td><td>规定此input元素首次加载时应当被选中</td></tr><tr><td>maxlength</td><td>正整数</td><td>规定输入字段中的字符的最大长度</td></tr></tbody></table><ul><li>name和value是每个表单元素都有的属性值，主要给后台人员使用</li><li>name表单元素的名字，要求<strong>单选按钮和复选按钮要有相同的name值</strong></li><li><strong>checked属性主要针对于单选按钮和复选按钮</strong>，主要作用一打开页面，就要可以默认选中某个表单元素</li><li>maxlength是用户可以在表单元素输入的最大字符数。</li></ul><h5 id="3-4-2-lt-label-gt-标签"><a href="#3-4-2-lt-label-gt-标签" class="headerlink" title="3.4.2 &lt;label&gt;标签"></a>3.4.2 &lt;label&gt;标签</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sex&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>&lt;label&gt;</code>标签为input元素定义标注（<strong>标签</strong>）</li><li><code>&lt;label&gt;</code>标签用于绑定一个表单元素，当点击<code>&lt;label&gt;</code>标签内的元素时，浏览器就会自动将焦点（光标）转到或者选择对应的表单元素上，用来增加用户体验</li><li>核心：<code>&lt;label&gt;</code>标签的<strong>for属性</strong>应当与相关元素的<strong>id属性相同</strong></li></ul><h5 id="3-4-3-lt-select-gt-表单元素"><a href="#3-4-3-lt-select-gt-表单元素" class="headerlink" title="3.4.3 &lt;select&gt;表单元素"></a>3.4.3 &lt;select&gt;表单元素</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>&lt;select&gt;</code>标签控件定义下拉列表</li><li><code>&lt;select&gt;</code>中至少包含一对<code>&lt;option&gt;</code></li><li><code>在&lt;option&gt;</code>中定义<code>selected= &quot;selected&quot;</code>时，当前项即为默认选中项。</li></ul><h5 id="3-4-4-lt-textarea-gt-表单元素"><a href="#3-4-4-lt-textarea-gt-表单元素" class="headerlink" title="3.4.4 &lt;textarea&gt;表单元素"></a>3.4.4 &lt;textarea&gt;表单元素</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">    文本内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>&lt;textarea&gt;</code>标签用于创建多行文本输入框</li><li>cols=”每行中的字符数”，rols=”显示的行数”，<strong>实际开发中用CSS来改变大小。</strong></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HTML简介&quot;&gt;&lt;a href=&quot;#HTML简介&quot; class=&quot;headerlink&quot; title=&quot;HTML简介&quot;&gt;&lt;/a&gt;HTML简介&lt;/h1&gt;&lt;h2 id=&quot;一、表格标签&quot;&gt;&lt;a href=&quot;#一、表格标签&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>01-HTML简介（上）</title>
    <link href="https://ominibass.github.io/2021/12/07/01-HTML%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
    <id>https://ominibass.github.io/2021/12/07/01-HTML%EF%BC%88%E4%B8%8A%EF%BC%89/</id>
    <published>2021-12-07T07:10:18.852Z</published>
    <updated>2021-12-07T07:41:45.037Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML简介"><a href="#HTML简介" class="headerlink" title="HTML简介"></a>HTML简介</h1><h2 id="Web标准的构成"><a href="#Web标准的构成" class="headerlink" title="Web标准的构成"></a>Web标准的构成</h2><ul><li>主要包括结构（Structure）、表现（presentation）和行为（behevior）三个方面</li></ul><table><thead><tr><th>标准</th><th>说明</th></tr></thead><tbody><tr><td>结构</td><td>结构用于对<strong>网页元素</strong>进行整理和分类，主要指的是HTML</td></tr><tr><td>表现</td><td>表现用于设置网页元素的版式、颜色、大小等<strong>外观样式</strong>，主要指的是CSS</td></tr><tr><td>行为</td><td>行为是指网页模型的定义与<strong>交互</strong>的缩写，主要指的是Javascript</td></tr></tbody></table><ul><li>Web标准提出的最佳体验方案：<strong>结构、样式、行为相分离</strong></li><li>简单理解：结构要写到HTML中，样式写到CSS中，行为写到JS中</li></ul><h2 id="HTML基本结构标签"><a href="#HTML基本结构标签" class="headerlink" title="HTML基本结构标签"></a>HTML基本结构标签</h2><table><thead><tr><th>标签名</th><th>定义</th><th>说明</th></tr></thead><tbody><tr><td><code>&lt;html&gt;&lt;/html&gt;</code></td><td>HTML标签</td><td>页面中最大的标签，我们称之为<strong>根标签</strong></td></tr><tr><td><code>&lt;head&gt;&lt;/head&gt;</code></td><td>文档的头部</td><td>注意在head标签中我们必须要设置的标签是title</td></tr><tr><td><code>&lt;title&gt;&lt;/title&gt;</code></td><td>文档的标题</td><td>让页面拥有一个属于自己的网页标题</td></tr><tr><td><code>&lt;body&gt;&lt;/body&gt;</code></td><td>文档的主体</td><td>元素包含文档的所有内容，页面内容基本都是放到body中的</td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h2 id="HTML常用标签"><a href="#HTML常用标签" class="headerlink" title="HTML常用标签"></a>HTML常用标签</h2><h3 id="标题标签"><a href="#标题标签" class="headerlink" title="标题标签"></a>标题标签</h3><ul><li>用法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是一级标题<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是二级标题<span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>我是三级标题<span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>我是四级标题<span class="tag">&lt;<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>我是五级标题<span class="tag">&lt;<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>我是六级标题<span class="tag">&lt;<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>标签语义：作为标题使用，并且依据重要性递减</li><li>特点<ul><li>加了标题的文字会变得加粗，字号变大</li><li>一个标题独占一行</li></ul></li></ul><h3 id="段落标签"><a href="#段落标签" class="headerlink" title="段落标签"></a>段落标签</h3><ul><li>用法</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;我是一个段落标签&lt;/p&gt;</span><br></pre></td></tr></table></figure><ul><li>单词paragraph的缩写，意为段落</li><li>标签语义：可以把html文档分割为若干<strong>段落</strong></li><li>特点<ul><li>文本在一个段落中会根据浏览器窗口的大小自动换行</li><li>段落与段落之间保有空隙</li></ul></li></ul><h3 id="换行标签"><a href="#换行标签" class="headerlink" title="换行标签"></a>换行标签</h3><ul><li>用法</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;/br&gt;</span><br></pre></td></tr></table></figure><ul><li>单词break的缩写，意味打断，换行</li><li>标签语义：强制换行</li><li>特点<ul><li><code>&lt;/br&gt;</code>是个单标签</li><li><code>&lt;/br&gt;</code>标签只是简单的开始新的一行，跟段落不一样，段落之间会插入一些垂直的距离</li></ul></li></ul><h3 id="文本格式化标签"><a href="#文本格式化标签" class="headerlink" title="文本格式化标签"></a>文本格式化标签</h3><table><thead><tr><th>语义</th><th>标签</th><th>说明</th></tr></thead><tbody><tr><td><strong>加粗</strong></td><td><code>&lt;strong&gt;&lt;/strong&gt;</code>或者<code>&lt;b&gt;&lt;/b&gt;</code></td><td>更推荐使用<strong>标签，语义更强烈</td></tr><tr><td><strong>倾斜</strong></td><td><code>&lt;em&gt;&lt;/em&gt;</code>或者<code>&lt;i&gt;&lt;/i&gt;</code></td><td>更推荐使用<em>标签，语义更强烈</td></tr><tr><td>删除线</td><td><code>&lt;del&gt;&lt;/del&gt;</code>或者<code>&lt;s&gt;&lt;/s&gt;</code></td><td>更推荐使用<del>标签，语义更强烈</td></tr><tr><td>下划线</td><td><code>&lt;ins&gt;&lt;/ins&gt;</code>或者<code>&lt;u&gt;&lt;/u&gt;</code></td><td>更推荐使用<ins>标签，语义更强烈</td></tr></tbody></table><p>标签语义：突出重要性，比普通文字更加重要</p><h3 id="div和span标签"><a href="#div和span标签" class="headerlink" title="div和span标签"></a>div和span标签</h3><ul><li>用法</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>这是头部<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>今日价格<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>标签语义<ul><li>div是division的缩写，表示分割，分区</li><li>span意为跨度、跨距</li></ul></li><li>特点<ul><li><code>&lt;div&gt;</code>标签用来布局，但是一行智能放一个<code>&lt;div&gt;</code>。 <strong>大盒子</strong></li><li><code>&lt;span&gt;</code>标签用来布局，一行上可以放多个<code>&lt;span&gt;</code>。 <strong>小盒子</strong></li></ul></li></ul><h3 id="图像标签用法"><a href="#图像标签用法" class="headerlink" title="图像标签用法"></a>图像标签用法</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图像url&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>img是单词image的缩写，意为图像</li><li>src是<code>&lt;img&gt;</code>的<strong>必须属性</strong>，它用于<strong>指定图像文件的路径和文件名</strong>。</li><li>所谓属性：简单解释就是属于这个图像标签的特性</li><li>图像标签的其他属性：</li></ul><table><thead><tr><th>属性</th><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>src</td><td>图片路径</td><td>必须属性</td></tr><tr><td>alt</td><td>文本</td><td>替换文本，图片不能正常显示时显示该文本</td></tr><tr><td>title</td><td>文本</td><td>提示文本，鼠标放到图像上时候悬浮显示</td></tr><tr><td>width</td><td>像素</td><td>设置图像的宽度</td></tr><tr><td>height</td><td>像素</td><td>设置图像的高度</td></tr><tr><td>border</td><td>像素</td><td>设置图像的边框宽度</td></tr></tbody></table><h3 id="路径用法"><a href="#路径用法" class="headerlink" title="路径用法"></a>路径用法</h3><h4 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a>相对路径</h4><ul><li>相对路径：以<strong>引用文件所在位置</strong>为参考基础，而建立出的目录路径</li><li>简单来说：<strong>图片相对于HTML页面的位置</strong></li></ul><table><thead><tr><th>相对路径分类</th><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>同一级路径</td><td></td><td>图像文件位于HTML文件同一级，如<code>&lt;img src=&quot;baidu.gif&quot;&gt;</code></td></tr><tr><td>下一级路径</td><td>/</td><td>图像文件位于HTML文件下一级，如<code>&lt;img src=&quot;img/baidu.gif&quot;&gt;</code></td></tr><tr><td>上一级路径</td><td>../</td><td>图像文件位于HTML文件上一级，如<code>&lt;img src=&quot;../baidu.gif&quot;&gt;</code></td></tr></tbody></table><h4 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a>绝对路径</h4><ul><li>绝对路径：是指目录下的绝对位置，直接到达目标位置，通常是从盘符开始的路径</li><li>例如：”D:\web\img\loogo.gif”或完整的网络地址：htttp://<a href="http://www.itcast.cn/images/logo.gif">www.itcast.cn/images/logo.gif</a></li></ul><h3 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h3><h4 id="链接的语法格式"><a href="#链接的语法格式" class="headerlink" title="链接的语法格式"></a>链接的语法格式</h4><ul><li><p>在HTML标签中，<code>&lt;a&gt;</code>标签用于定义<strong>超链接</strong>，作用是从一个页面链接到另一个页面</p></li><li><p>用法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;跳转目标&quot;</span> <span class="attr">target</span>=<span class="string">&quot;目标窗口的弹出方式&quot;</span>&gt;</span>文本或图像<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>&lt;a&gt;</code>的单词为anchor，意为“锚”</p></li></ul><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>href</td><td>用于指定链接目标的url地址，（必须属性）当为标签应用href属性时，它就有了超链接的功能</td></tr><tr><td>target</td><td>用于指定链接页面的打开方式，其中<code>_self</code>为默认值，<code>_blank</code>为在新窗口中打开</td></tr></tbody></table><h4 id="链接分类"><a href="#链接分类" class="headerlink" title="链接分类"></a>链接分类</h4><table><thead><tr><th>链接类型</th><th>说明</th></tr></thead><tbody><tr><td>外部链接</td><td>例如 &lt; a href=”http:// <a href="http://www.baidu.com/">www.baidu.com</a><a href="http://www.baidu.com/"> </a>“&gt; 百度</a >。</td></tr><tr><td>内部链接</td><td>网站内部页面之间的相互链接. 直接链接内部页面名称即可，例如 &lt; a href=”index.html”&gt; 首页 </a >。</td></tr><tr><td>空链接</td><td>如果当时没有确定链接目标时，&lt; a href=”#”&gt; 首页 </a > 。</td></tr><tr><td>下载链接</td><td>如果 href 里面地址是一个文件或者压缩包，会下载这个文件。</td></tr><tr><td>网页元素链接</td><td>在网页中的各种网页元素，如文本、图像、表格、音频、视频等都可以添加超链接</td></tr><tr><td>锚点链接</td><td>锚点链接: 点我们点击链接,可以快速定位到页面中的某个位置。</td></tr><tr><td>锚点链接</td><td>在链接文本的 href 属性中，设置属性值为 #名字 的形式，如<code>&lt;a href=&quot;#two&quot;&gt; 第2集 &lt;/a&gt;</code></td></tr><tr><td>锚点链接</td><td>找到目标位置标签，里面添加一个 id 属性 = 刚才的名字 ，如：<code>&lt;h3 id=&quot;two&quot;&gt;第2集介绍&lt;/h3&gt;</code></td></tr></tbody></table><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ul><li>html中的中的注释以<strong>“<!--”开头，以“ -->”</strong>结束。</li><li>用法：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注释语句 --&gt;</span>快捷键: ctrl +/</span><br></pre></td></tr></table></figure><h3 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h3><ul><li>重点记住空格、大于号、小于号这三个即可（MD中也是这个）</li></ul><p><img src="https://image-pifw.oss-cn-hangzhou.aliyuncs.com/image-20211203161730650.png" alt="image-20211203161730650"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HTML简介&quot;&gt;&lt;a href=&quot;#HTML简介&quot; class=&quot;headerlink&quot; title=&quot;HTML简介&quot;&gt;&lt;/a&gt;HTML简介&lt;/h1&gt;&lt;h2 id=&quot;Web标准的构成&quot;&gt;&lt;a href=&quot;#Web标准的构成&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    
  </entry>
  
</feed>
